// Generated from D:/Projects/py.at.home_2_x86_compiler/py.at.home_2_x86_compiler/src/main/java/evilpops/pyathome_2_x86/grammar/PyAtHome.g4 by ANTLR 4.13.1
package main.java.evilpops.pyathome_2_x86.grammar.grammar_classes;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class PyAtHomeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS_SKIP=1, COMMENT_SKIP=2, NEWLINE=3, ASSIGN=4, L_PAREN=5, R_PAREN=6, 
		PLUS=7, MINUS=8, MUL=9, DIV=10, EQ=11, NEQ=12, GR=13, LS=14, GREQ=15, 
		LSEQ=16, AND=17, OR=18, BOOLEAN=19, ID=20, FLOAT=21, INTEGER=22, STRING=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"WS_SKIP", "COMMENT_SKIP", "NEWLINE", "ASSIGN", "L_PAREN", "R_PAREN", 
			"PLUS", "MINUS", "MUL", "DIV", "EQ", "NEQ", "GR", "LS", "GREQ", "LSEQ", 
			"AND", "OR", "BOOLEAN", "ID", "FLOAT", "INTEGER", "STRING"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'='", "'('", "')'", "'+'", "'-'", "'*'", "'/'", 
			"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'and'", "'or'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WS_SKIP", "COMMENT_SKIP", "NEWLINE", "ASSIGN", "L_PAREN", "R_PAREN", 
			"PLUS", "MINUS", "MUL", "DIV", "EQ", "NEQ", "GR", "LS", "GREQ", "LSEQ", 
			"AND", "OR", "BOOLEAN", "ID", "FLOAT", "INTEGER", "STRING"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	private final IndentationTracker indentTracker = new IndentationTracker();

	@Override
	public Token nextToken() {
		Token tk = indentTracker.sendDentTokenIfNeeded();
	    if (tk != null) {
	        System.out.println(tk);
	        return tk;
	    }
	    tk = super.nextToken();
	    System.out.println(tk);
	    indentTracker.processToken(tk);
	    return tk;
	}


	public PyAtHomeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "PyAtHome.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00d7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0001\u0000\u0004\u0000"+
		"1\b\u0000\u000b\u0000\f\u00002\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0005\u00019\b\u0001\n\u0001\f\u0001<\t\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0005\u0002B\b\u0002\n\u0002\f\u0002E\t"+
		"\u0002\u0001\u0002\u0001\u0002\u0004\u0002I\b\u0002\u000b\u0002\f\u0002"+
		"J\u0001\u0002\u0001\u0002\u0005\u0002O\b\u0002\n\u0002\f\u0002R\t\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0004\u0002W\b\u0002\u000b\u0002"+
		"\f\u0002X\u0001\u0002\u0003\u0002\\\b\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0003\u0012\u008c\b\u0012"+
		"\u0001\u0013\u0001\u0013\u0005\u0013\u0090\b\u0013\n\u0013\f\u0013\u0093"+
		"\t\u0013\u0001\u0014\u0003\u0014\u0096\b\u0014\u0001\u0014\u0001\u0014"+
		"\u0005\u0014\u009a\b\u0014\n\u0014\f\u0014\u009d\t\u0014\u0003\u0014\u009f"+
		"\b\u0014\u0001\u0014\u0001\u0014\u0004\u0014\u00a3\b\u0014\u000b\u0014"+
		"\f\u0014\u00a4\u0001\u0014\u0003\u0014\u00a8\b\u0014\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00ac\b\u0014\n\u0014\f\u0014\u00af\t\u0014\u0001\u0014"+
		"\u0001\u0014\u0005\u0014\u00b3\b\u0014\n\u0014\f\u0014\u00b6\t\u0014\u0003"+
		"\u0014\u00b8\b\u0014\u0001\u0015\u0003\u0015\u00bb\b\u0015\u0001\u0015"+
		"\u0004\u0015\u00be\b\u0015\u000b\u0015\f\u0015\u00bf\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0005\u0016\u00c6\b\u0016\n\u0016\f\u0016"+
		"\u00c9\t\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0005\u0016\u00d0\b\u0016\n\u0016\f\u0016\u00d3\t\u0016\u0001\u0016\u0003"+
		"\u0016\u00d6\b\u0016\u0000\u0000\u0017\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014)\u0015+\u0016-\u0017\u0001\u0000\n\u0003\u0000\t\t\r\r"+
		"  \u0001\u0000\n\n\u0003\u0000\t\n\r\r  \u0002\u0000\t\t  \u0003\u0000"+
		"AZ__az\u0004\u000009AZ__az\u0001\u000019\u0001\u000009\u0003\u0000\n\n"+
		"\"\"\\\\\u0003\u0000\n\n\'\'\\\\\u00f0\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u00010\u0001\u0000\u0000\u0000\u00036\u0001"+
		"\u0000\u0000\u0000\u0005[\u0001\u0000\u0000\u0000\u0007]\u0001\u0000\u0000"+
		"\u0000\t_\u0001\u0000\u0000\u0000\u000ba\u0001\u0000\u0000\u0000\rc\u0001"+
		"\u0000\u0000\u0000\u000fe\u0001\u0000\u0000\u0000\u0011g\u0001\u0000\u0000"+
		"\u0000\u0013i\u0001\u0000\u0000\u0000\u0015k\u0001\u0000\u0000\u0000\u0017"+
		"n\u0001\u0000\u0000\u0000\u0019q\u0001\u0000\u0000\u0000\u001bs\u0001"+
		"\u0000\u0000\u0000\u001du\u0001\u0000\u0000\u0000\u001fx\u0001\u0000\u0000"+
		"\u0000!{\u0001\u0000\u0000\u0000#\u007f\u0001\u0000\u0000\u0000%\u008b"+
		"\u0001\u0000\u0000\u0000\'\u008d\u0001\u0000\u0000\u0000)\u00b7\u0001"+
		"\u0000\u0000\u0000+\u00ba\u0001\u0000\u0000\u0000-\u00d5\u0001\u0000\u0000"+
		"\u0000/1\u0007\u0000\u0000\u00000/\u0001\u0000\u0000\u000012\u0001\u0000"+
		"\u0000\u000020\u0001\u0000\u0000\u000023\u0001\u0000\u0000\u000034\u0001"+
		"\u0000\u0000\u000045\u0006\u0000\u0000\u00005\u0002\u0001\u0000\u0000"+
		"\u00006:\u0005#\u0000\u000079\b\u0001\u0000\u000087\u0001\u0000\u0000"+
		"\u00009<\u0001\u0000\u0000\u0000:8\u0001\u0000\u0000\u0000:;\u0001\u0000"+
		"\u0000\u0000;=\u0001\u0000\u0000\u0000<:\u0001\u0000\u0000\u0000=>\u0006"+
		"\u0001\u0000\u0000>\u0004\u0001\u0000\u0000\u0000?C\u0005\n\u0000\u0000"+
		"@B\u0007\u0002\u0000\u0000A@\u0001\u0000\u0000\u0000BE\u0001\u0000\u0000"+
		"\u0000CA\u0001\u0000\u0000\u0000CD\u0001\u0000\u0000\u0000DF\u0001\u0000"+
		"\u0000\u0000EC\u0001\u0000\u0000\u0000FH\u0005\n\u0000\u0000GI\u0007\u0003"+
		"\u0000\u0000HG\u0001\u0000\u0000\u0000IJ\u0001\u0000\u0000\u0000JH\u0001"+
		"\u0000\u0000\u0000JK\u0001\u0000\u0000\u0000K\\\u0001\u0000\u0000\u0000"+
		"LP\u0005\n\u0000\u0000MO\u0007\u0002\u0000\u0000NM\u0001\u0000\u0000\u0000"+
		"OR\u0001\u0000\u0000\u0000PN\u0001\u0000\u0000\u0000PQ\u0001\u0000\u0000"+
		"\u0000QS\u0001\u0000\u0000\u0000RP\u0001\u0000\u0000\u0000S\\\u0005\n"+
		"\u0000\u0000TV\u0005\n\u0000\u0000UW\u0007\u0003\u0000\u0000VU\u0001\u0000"+
		"\u0000\u0000WX\u0001\u0000\u0000\u0000XV\u0001\u0000\u0000\u0000XY\u0001"+
		"\u0000\u0000\u0000Y\\\u0001\u0000\u0000\u0000Z\\\u0005\n\u0000\u0000["+
		"?\u0001\u0000\u0000\u0000[L\u0001\u0000\u0000\u0000[T\u0001\u0000\u0000"+
		"\u0000[Z\u0001\u0000\u0000\u0000\\\u0006\u0001\u0000\u0000\u0000]^\u0005"+
		"=\u0000\u0000^\b\u0001\u0000\u0000\u0000_`\u0005(\u0000\u0000`\n\u0001"+
		"\u0000\u0000\u0000ab\u0005)\u0000\u0000b\f\u0001\u0000\u0000\u0000cd\u0005"+
		"+\u0000\u0000d\u000e\u0001\u0000\u0000\u0000ef\u0005-\u0000\u0000f\u0010"+
		"\u0001\u0000\u0000\u0000gh\u0005*\u0000\u0000h\u0012\u0001\u0000\u0000"+
		"\u0000ij\u0005/\u0000\u0000j\u0014\u0001\u0000\u0000\u0000kl\u0005=\u0000"+
		"\u0000lm\u0005=\u0000\u0000m\u0016\u0001\u0000\u0000\u0000no\u0005!\u0000"+
		"\u0000op\u0005=\u0000\u0000p\u0018\u0001\u0000\u0000\u0000qr\u0005>\u0000"+
		"\u0000r\u001a\u0001\u0000\u0000\u0000st\u0005<\u0000\u0000t\u001c\u0001"+
		"\u0000\u0000\u0000uv\u0005>\u0000\u0000vw\u0005=\u0000\u0000w\u001e\u0001"+
		"\u0000\u0000\u0000xy\u0005<\u0000\u0000yz\u0005=\u0000\u0000z \u0001\u0000"+
		"\u0000\u0000{|\u0005a\u0000\u0000|}\u0005n\u0000\u0000}~\u0005d\u0000"+
		"\u0000~\"\u0001\u0000\u0000\u0000\u007f\u0080\u0005o\u0000\u0000\u0080"+
		"\u0081\u0005r\u0000\u0000\u0081$\u0001\u0000\u0000\u0000\u0082\u0083\u0005"+
		"T\u0000\u0000\u0083\u0084\u0005r\u0000\u0000\u0084\u0085\u0005u\u0000"+
		"\u0000\u0085\u008c\u0005e\u0000\u0000\u0086\u0087\u0005F\u0000\u0000\u0087"+
		"\u0088\u0005a\u0000\u0000\u0088\u0089\u0005l\u0000\u0000\u0089\u008a\u0005"+
		"s\u0000\u0000\u008a\u008c\u0005e\u0000\u0000\u008b\u0082\u0001\u0000\u0000"+
		"\u0000\u008b\u0086\u0001\u0000\u0000\u0000\u008c&\u0001\u0000\u0000\u0000"+
		"\u008d\u0091\u0007\u0004\u0000\u0000\u008e\u0090\u0007\u0005\u0000\u0000"+
		"\u008f\u008e\u0001\u0000\u0000\u0000\u0090\u0093\u0001\u0000\u0000\u0000"+
		"\u0091\u008f\u0001\u0000\u0000\u0000\u0091\u0092\u0001\u0000\u0000\u0000"+
		"\u0092(\u0001\u0000\u0000\u0000\u0093\u0091\u0001\u0000\u0000\u0000\u0094"+
		"\u0096\u0005-\u0000\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0095\u0096"+
		"\u0001\u0000\u0000\u0000\u0096\u009e\u0001\u0000\u0000\u0000\u0097\u009b"+
		"\u0007\u0006\u0000\u0000\u0098\u009a\u0007\u0007\u0000\u0000\u0099\u0098"+
		"\u0001\u0000\u0000\u0000\u009a\u009d\u0001\u0000\u0000\u0000\u009b\u0099"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0001\u0000\u0000\u0000\u009c\u009f"+
		"\u0001\u0000\u0000\u0000\u009d\u009b\u0001\u0000\u0000\u0000\u009e\u0097"+
		"\u0001\u0000\u0000\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u00a0"+
		"\u0001\u0000\u0000\u0000\u00a0\u00a2\u0005.\u0000\u0000\u00a1\u00a3\u0007"+
		"\u0007\u0000\u0000\u00a2\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000\u00a4\u00a5\u0001"+
		"\u0000\u0000\u0000\u00a5\u00b8\u0001\u0000\u0000\u0000\u00a6\u00a8\u0005"+
		"-\u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00ad\u0007\u0006"+
		"\u0000\u0000\u00aa\u00ac\u0007\u0007\u0000\u0000\u00ab\u00aa\u0001\u0000"+
		"\u0000\u0000\u00ac\u00af\u0001\u0000\u0000\u0000\u00ad\u00ab\u0001\u0000"+
		"\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae\u00b0\u0001\u0000"+
		"\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00b0\u00b4\u0005.\u0000"+
		"\u0000\u00b1\u00b3\u0007\u0007\u0000\u0000\u00b2\u00b1\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b6\u0001\u0000\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000"+
		"\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b8\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b4\u0001\u0000\u0000\u0000\u00b7\u0095\u0001\u0000\u0000"+
		"\u0000\u00b7\u00a7\u0001\u0000\u0000\u0000\u00b8*\u0001\u0000\u0000\u0000"+
		"\u00b9\u00bb\u0005-\u0000\u0000\u00ba\u00b9\u0001\u0000\u0000\u0000\u00ba"+
		"\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000\u0000\u00bc"+
		"\u00be\u0007\u0007\u0000\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00be"+
		"\u00bf\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c0\u0001\u0000\u0000\u0000\u00c0,\u0001\u0000\u0000\u0000\u00c1\u00c7"+
		"\u0005\"\u0000\u0000\u00c2\u00c6\b\b\u0000\u0000\u00c3\u00c4\u0005\\\u0000"+
		"\u0000\u00c4\u00c6\t\u0000\u0000\u0000\u00c5\u00c2\u0001\u0000\u0000\u0000"+
		"\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c6\u00c9\u0001\u0000\u0000\u0000"+
		"\u00c7\u00c5\u0001\u0000\u0000\u0000\u00c7\u00c8\u0001\u0000\u0000\u0000"+
		"\u00c8\u00ca\u0001\u0000\u0000\u0000\u00c9\u00c7\u0001\u0000\u0000\u0000"+
		"\u00ca\u00d6\u0005\"\u0000\u0000\u00cb\u00d1\u0005\'\u0000\u0000\u00cc"+
		"\u00d0\b\t\u0000\u0000\u00cd\u00ce\u0005\\\u0000\u0000\u00ce\u00d0\t\u0000"+
		"\u0000\u0000\u00cf\u00cc\u0001\u0000\u0000\u0000\u00cf\u00cd\u0001\u0000"+
		"\u0000\u0000\u00d0\u00d3\u0001\u0000\u0000\u0000\u00d1\u00cf\u0001\u0000"+
		"\u0000\u0000\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2\u00d4\u0001\u0000"+
		"\u0000\u0000\u00d3\u00d1\u0001\u0000\u0000\u0000\u00d4\u00d6\u0005\'\u0000"+
		"\u0000\u00d5\u00c1\u0001\u0000\u0000\u0000\u00d5\u00cb\u0001\u0000\u0000"+
		"\u0000\u00d6.\u0001\u0000\u0000\u0000\u0019\u00002:CJPX[\u008b\u0091\u0095"+
		"\u009b\u009e\u00a4\u00a7\u00ad\u00b4\u00b7\u00ba\u00bf\u00c5\u00c7\u00cf"+
		"\u00d1\u00d5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}